{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,kBACnCE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,IAAKL,SAASC,cAAc,WAsC9B,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA5CPV,EAAKO,IAAIW,iBAAiB,SAE1B,SAAkBC,GAChBA,EAAEC,iBAMF,IALA,IAAMhB,EAAaiB,OAAOrB,EAAKI,WAAWkB,OACpCjB,EAAOgB,OAAOrB,EAAKK,KAAKiB,OACxBhB,EAASe,OAAOrB,EAAKM,OAAOgB,OAC9BC,EAAQ,EAEHC,EAAI,EAAGA,GAAKlB,EAAQkB,IAAK,CAChC,IAAMC,EAAWD,EACjBE,QAAQC,IAAI,OAASC,OAAFJ,IAQnBhB,EAAciB,EALZF,GADQ,IAANC,EACOpB,EAEAC,GAIRwB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCL,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAGjDwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAAjC,GAASkC,OAAOG,QACd,sBAAqCP,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAIjDgB,QAAQC,IAAIJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('button'),\n};\n\nrefs.btn.addEventListener('click', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const firstDelay = Number(refs.firstDelay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n  let delay = 0;\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    console.log(`i = ${i}`);\n\n    if (i === 1) {\n      delay += firstDelay;\n    } else {\n      delay += step;\n    }\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    console.log(delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","step","amount","btn","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","Number","value","delay1","i","position1","console","log","concat","then","param","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.a12fe9a7.js.map"}