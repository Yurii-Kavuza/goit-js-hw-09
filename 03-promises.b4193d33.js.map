{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,eAGwBC,KAAKC,UAS1BC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBC,EAAAR,GAASS,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,OACpEK,QAAMC,IAAI,uBAAwCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAE3DO,OAAM,SAAAT,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBC,EAAAR,GAASS,OAAOM,QAAQ,sBAAuCJ,OAAfL,EAAS,QAAYK,OAANJ,EAAM,OACnEK,QAAMC,IAAI,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$iU1Pc","parcelRequire","Math","random","then","param","position","delay","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.b4193d33.js.map"}